import cohere
import logging
import asyncio
from aiogram import Bot, Dispatcher
from aiogram.types import Message

# API keys for AI and Telegram bot
AI_API_KEY = 'your-cohere-api-key-here'  # Replace with your actual Cohere API key
API_TOKEN = 'your-telegram-bot-token-here'  # Replace with your actual Telegram API token

# Initialize the bot and dispatcher for handling messages
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# Function to generate a response from the AI model
async def generate_answer(prompt: str) -> str:
    """
    Sends the user's input to the Cohere AI model and returns the generated response.
    :param prompt: The user's message to be processed by the AI model
    :return: Response generated by the AI
    """
    co = cohere.Client(AI_API_KEY)
    response = co.chat(message=prompt)
    return response.text

# Handler for processing any incoming message
@dp.message()
async def handle_message(message: Message):
    """
    Handles incoming user messages by sending them to the AI and returning the response.
    :param message: The message object received from the user
    """
    # Inform the user that a response is being generated
    await message.answer("AI: Generating response ...")

    # Get AI response based on user's input
    user_input = message.text
    gpt_response = await generate_answer(user_input)
    
    # Send the AI's response back to the user
    await message.answer(gpt_response)

# Main function to start polling the bot
async def main():
    """
    Starts the bot's polling to listen for incoming messages and handle them.
    """
    await dp.start_polling(bot)

# Run the bot if the script is executed directly
if __name__ == '__main__':
    logging.basicConfig(level=logging.INFO)
    asyncio.run(main())
